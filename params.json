{"name":"Cuervo","tagline":"Jekyll-like blog-aware site management with nodejs/markdown/mustache. ","body":"# Cuervo [![Build Status](https://travis-ci.org/natedsaint/cuervo.svg?branch=master)](https://travis-ci.org/natedsaint/cuervo) [![Coverage Status](https://coveralls.io/repos/natedsaint/cuervo/badge.svg?branch=master)](https://coveralls.io/r/natedsaint/cuervo?branch=master) [![Cuervo on NPM](https://img.shields.io/npm/v/cuervo.svg)](https://npmjs.org/package/cuervo) [![Dependency Status](https://gemnasium.com/natedsaint/cuervo.svg)](https://gemnasium.com/natedsaint/cuervo)\r\n\r\n## Setup\r\n\r\nI'll go ahead and jump on the bandwagon and say at this point: this is NOT a stable\r\nor finished project. It's a work in progress, and there's a good chance I'll slowly\r\n(or rapidly) develop individual pieces as I go.\r\n\r\n\r\nIf, against your own better judgment, you're still reading this, you can get this now by just typing\r\n\r\n`npm install -g cuervo`\r\n\r\nWhen the dependencies have been installed, you should be able to\r\nchange to the directory that contains your blog files, and run...\r\n\r\n    cuervo\r\n\r\nAlong the same vein as [Jekyll][2] and [Heckle][1], it parses a `_config.yml` for default options, and \r\ntreats `_posts`, `_layouts`, and `_includes` dirs. Your templates (_includes are like partials) should be in\r\n[Mustache][3] syntax, but all your posts will also be parsed using [Markdown][4].  \r\n\r\nTypical site format looks like this: \r\n- _config.yml\r\n- contact.mustache\r\n- styles\r\n  - page.css\r\n- about.mustache\r\n- _posts\r\n  - 2014-01-10-title.md\r\n- _layouts\r\n  - page.mustache\r\n- _includes\r\n  - header.mustache\r\n  - footer.mustache\r\n  - widget.md\r\n\r\nThis will result in the following in (_site) :\r\n\r\n- feed.rss\r\n- contact.html\r\n- about.html\r\n- .htaccess\r\n- title.html\r\n- style\r\n  - page.css\r\n\r\n\r\n[1]: https://github.com/marijnh/heckle\r\n[2]: https://github.com/mojombo/jekyll\r\n[3]: https://mustache.github.com\r\n[4]: http://commonmark.org/\r\n\r\n## Config options \r\nThe configs are by default determined in the main Cuervo class:\r\n\r\n```\r\ndefaults : {\r\n        postLink: \"${name}.html\", // mustache-formatted output url\r\n        makeRewrites: true, // makes an .htaccess file for your main pages (about.html = /about)\r\n        latestNewsCount: 5, // for the latestNews variable, how many posts?\r\n        makeFeed: false, // make an rss feed?\r\n        summaryWords: 100, // how many words to determine the summary?\r\n        summaryReadMoreText: \"... read more\" // when you run out of words, what does the link say?\r\n    }\r\n```\r\n\r\nYou you should also provide the following in your _config.yml\r\n```\r\ndomain: http://yourdomain.com\r\nsitename: Your Site \r\ndescription: Your blog of stuff\r\nfeedImage: images/feedLogo.png\r\n```\r\n## Why?\r\n\r\nA fork of a clone! [Heckle][1] gave me the idea, which Marijn Haverbeke describes as a \"minimal [Jekyll][2] clone in node.js.\"\r\n\r\nLike Marijn, I liked the approach to managing a site taken by Jekyll. \r\n\r\nAlso like Marijn, I don't like Ruby. However, unlike Marijn, I DO enjoy logic-less templates.\r\n\r\nSo the chain goes like this: \r\n\r\n- Jekyll is Ruby with Liquid as the templating engine.\r\n\r\n- Heckle is JavaScript with Mold (programmable template extravaganza) as\r\nthe templating engine.\r\n\r\nAnd NOW:\r\n\r\n- Cuervo is JavaScript with Mustache as the templating engine.\r\n\r\n## Cuervo? Are you drunk?\r\n\r\nAt the time of writing... maybe.\r\n\r\nBut cuervo is the spanish word for Crow. Follow my logic here: Jekyll was named after the mad \r\nscientist from Dr. Jekyll and Mr. Hyde. Heckle was transferring that logic to the magpies \r\nfrom the old Terry Toons animations. I'm following the common conception that they were the crows\r\nfrom the old Dumbo cartoon, and giving them a classy Mexican mustache. It's so removed \r\nat this point I know you don't care, but I had to name it something.\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}